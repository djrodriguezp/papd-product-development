install.packages("reticulate")
library(reticulate)
use_python(/home/daniel/anaconda3/envs/papd/bin/python)
use_python("/home/daniel/anaconda3/envs/papd/bin/python")
use_python("/home/daniel/.local/share/r-miniconda/")
library(reticulate)
use_python("/home/daniel/anaconda3/envs/papd/bin/python")
shiny::runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs/demo1')
shiny::runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp()
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp()
runApp()
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp()
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
errors_newton = c(1.33.0.88,0.57,0.35,0.18,0.06,0.01,0.00)
errors_newton = c(1.33,0.88,0.57,0.35,0.18,0.06,0.01,0.00)
errors_newton
lm = linefit(log(errors_newton(1:end-1),log(errors_newton(2:end))))
y = log(errors_newton(2:end)
x <- log(errors_newton(1:end-1))
y <- log(errors_newton(2:end))
#x <- log(errors_newton(1:end-1))
#y <- log(errors_newton(2:end))
errors_newton[2:end]
#x <- log(errors_newton(1:end-1))
#y <- log(errors_newton(2:end))
errors_newton[2:]
help(":")
#x <- log(errors_newton(1:end-1))
#y <- log(errors_newton(2:end))
errors_newton[2:5]
#x <- log(errors_newton(1:end-1))
#y <- log(errors_newton(2:end))
errors_newton[2:lenghth(errors_newton)]
#x <- log(errors_newton(1:end-1))
#y <- log(errors_newton(2:end))
errors_newton[2:length(errors_newton)]
x
y <- errors_newton[2:length(errors_newton)]
x <- errors_newton[1:length(errors_newton)-1]
y <- errors_newton[2:length(errors_newton)]
x
x <- log(errors_newton[1:length(errors_newton)-1])
x
y <- errors_newton[2:length(errors_newton)]
x
lm(x ~ y)
lm1 <- lm(formula = x ~ y)
lm1
lm1[0]
#lm = linefit(,log(errors_newton(2:end))))
lm1$coefficients
lm1$coefficients[0]
lm1$coefficients(0)
lm1$coefficients
x
y
y <- log(errors_newton[2:length(errors_newton)])
y
lm_newton
#lm = linefit(,log(errors_newton(2:end))))
lm_newton
#lm = linefit(,log(errors_newton(2:end))))
#lm = linefit(,log(errors_newton(2:end))))
#lm = linefit(,log(errors_newton(2:end))))
#lm = linefit(,log(errors_newton(2:end))))
#lm = linefit(,log(errors_newton(2:end))))
errors_newton <- c(1.33,0.88,0.57,0.35,0.18,0.06,0.01,0.00)
errors_newton <- c(1.33,0.88,0.57,0.35,0.18,0.06,0.01,0.00)
x <- log(errors_newton[1:length(errors_newton)-1])
y <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x ~ y)
lm_newton
errors_newton <- c(1.33,0.88,0.57,0.35,0.18,0.06,0.01)
x <- log(errors_newton[1:length(errors_newton)-1])
y <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x ~ y)
lm_newton
errors_newton <- c(1.33,0.88,0.57,0.35,0.18,0.06,0.01)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
lm_newton
#lm = linefit(,log(errors_newton(2:end))))
errors_bisection = c(0.50,0.25,0.12,0.06,0.03,0.02)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(forumula = x_bisection ~ y_bisection)
errors_bisection = c(0.50,0.25,0.12,0.06,0.03,0.02)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(formula = x_bisection ~ y_bisection)
errors_bisection = c(0.50,0.25,0.12,0.06,0.03,0.02)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(formula = x_bisection ~ y_bisection)
lm_bisection
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
lm_newton
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
lm_newton
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
lm_newton
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
lm_newton
errors_bisection = c(0.50000,0.25000,0.12500,0.06250,0.03125,0.01562,0.00781,0.00391,0.00195,0.00098)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(formula = x_bisection ~ y_bisection)
lm_bisection
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
lm_newton
lm_newton
errors_bisection = c(0.50000,0.25000,0.12500,0.06250,0.03125,
0.01562,0.00781,0.00391,0.00195,0.00098)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(formula = x_bisection ~ y_bisection)
lm_bisection
errors_bisection = c(0.50000,0.25000,0.12500,0.06250,0.03125,
0.01562,0.00781,0.00391,0.00195,0.00098)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(formula = x_bisection ~ y_bisection)
lm_bisection
lm_bisection
abline(lm_newton)
plot(x_newton, y_newton, xlab="Ek",ylab="Ek+1")
abline(lm_newton)
plot(x_newton, y_newton, xlab="Error k",ylab="Error k+1")
abline(lm_newton)
plot(x_newton, y_newton, main="Errores Método Newton", xlab="Error k",ylab="Error k+1")
abline(lm_newton)
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", xlab="Error k",ylab="Error k+1")
abline(lm_newton)
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", col = "blue", xlab="Error k",ylab="Error k+1")
abline(lm_newton)
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", ex = 1.3,col = "blue", xlab="Error k",ylab="Error k+1")
abline(lm_newton)
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = x_newton ~ y_newton)
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", cex = 1.3,col = "blue", xlab="Error k",ylab="Error k+1")
abline(lm_newton)
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", pch = 16,cex = 1.3,col = "blue", xlab="Error k",ylab="Error k+1")
abline(lm_newton)
errors_bisection = c(0.50000,0.25000,0.12500,0.06250,0.03125,
0.01562,0.00781,0.00391,0.00195,0.00098)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(formula = x_bisection ~ y_bisection)
plot(x_bisection, y_bisection, main="Regresión Lineal - Errores Método Bisección", pch = 16,cex = 1.3,col = "blue", xlab="Error k",ylab="Error k+1")
abline(lm_bisection)
c(1:4)
plot(errors_newton, c(1:length(errors_newton)), main="Regresión Lineal - Errores Método Bisección", pch = 16,cex = 1.3,col = "red", xlab="Error k",ylab="Error k+1")
plot(c(1:length(errors_newton)),errors_newton, main="Regresión Lineal - Errores Método Bisección", pch = 16,cex = 1.3,col = "red", xlab="Error k",ylab="Error k+1")
plot(c(1:length(errors_newton)),errors_newton, main="Regresión Lineal - Errores Método Bisección", type=l,col = "red", xlab="Error k",ylab="Error k+1")
plot(c(1:length(errors_newton)),errors_newton, main="Regresión Lineal - Errores Método Bisección", type="l",col = "red", xlab="Error k",ylab="Error k+1")
plot(c(1:length(errors_newton)),errors_newton, main="Errores Método Newton",
type="l",col = "red", xlab="Iteración",ylab="Error")
plot(c(1:length(errors_newton)),errors_newton, main="Errores vs Iteraciones - Método Newton",
type="l",col = "red", xlab="Iteración",ylab="Error")
plot(c(1:length(errors_bisection)),errors_bisection, main="Errores vs Iteraciones - Método de Bisección",
type="l",col = "red", xlab="Iteración",ylab="Error")
plot(c(1:length(errors_bisection)),errors_bisection, main="Errores vs Iteraciones - Método de Bisección",
type="l",col = "red", xlab="Iteración",ylab="Error")
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", pch = 16,cex = 1.3,col = "blue", xlab="Error k",ylab="Error k+1")
abline(lm_newton)
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", pch = 16,cex = 1.3,col = "blue", xlab="log(Error k)",ylab="log(Error k+1)")
abline(lm_newton)
plot(x_bisection, y_bisection, main="Regresión Lineal - Errores Método Bisección", pch = 16,cex = 1.3,col = "blue",
xlab="log(Error k)",ylab="log(Error k+1)")
abline(lm_bisection)
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = y_newton ~ x_newton)
lm_newton
errors_bisection = c(0.50000,0.25000,0.12500,0.06250,0.03125,
0.01562,0.00781,0.00391,0.00195,0.00098)
x_bisection <- log(errors_bisection[1:length(errors_bisection)-1])
y_bisection <- log(errors_bisection[2:length(errors_bisection)])
lm_bisection <- lm(formula = y_bisection ~ x_bisection)
lm_bisection
errors_newton <- c(1.32812,0.87895,0.57172,0.35119,0.17991,0.05505,0.00505,0.00004)
x_newton <- log(errors_newton[1:length(errors_newton)-1])
y_newton <- log(errors_newton[2:length(errors_newton)])
lm_newton <- lm(formula = y_newton ~ x_newton)
lm_newton
lm_bisection
plot(x_newton, y_newton, main="Regresión Lineal - Errores Método Newton", pch = 16,cex = 1.3,col = "blue", xlab="log(Error k)",ylab="log(Error k+1)")
abline(lm_newton)
plot(x_bisection, y_bisection, main="Regresión Lineal - Errores Método Bisección", pch = 16,cex = 1.3,col = "blue",
xlab="log(Error k)",ylab="log(Error k+1)")
plot(x_bisection, y_bisection, main="Regresión Lineal - Errores Método Bisección", pch = 16,cex = 1.3,col = "blue",
xlab="log(Error k)",ylab="log(Error k+1)")
abline(lm_bisection)
plot(c(1:length(errors_bisection)),errors_bisection, main="Errores vs Iteraciones - Método de Bisección",
type="l",col = "red", xlab="Iteración",ylab="Error")
shiny::runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp()
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
runApp('Documents/tareas/maestria/papd/3er Trimestre/Algoritmos/labs')
install.packages("flexdashboard")
### Row 2.2
install.packages("ggplot2")
install.packages("dplyr")
install.packages(c("readr", "leaflet", "DT"))
install.packages("leaflet")
install.packages(c("terra", "raster", "leaflet"))
install.packages("gdal-config")
install.packages(c("leaflet", "dplyr"))
library(flexdashboard)
library(readr)
library(dplyr)
library(ggplot2)
videos <- read_csv("data/academatica_videos.csv")
metadata <- read_csv("data/academatica_videos_metadata.csv")
stats <- read_csv("data/academatica_video_stats.csv")
metricas <-
stats %>%
summarise(total_views = sum(viewCount),
total_likes = sum(likeCount),
total_dislikes = sum(dislikeCount),
total_favorite = sum(favoriteCount),
total_comment = sum(commentCount))
install.packages("formattable")
install.packages("lubridate")
install.packages(c("wordcloud", "tm"))
shiny::runApp('Documents/tareas/maestria/papd/4to/product_development/repo/shiny/file_upload')
runApp('Documents/tareas/maestria/papd/4to/product_development/repo/shiny/file_upload')
runApp('Documents/tareas/maestria/papd/4to/product_development/repo/shiny/file_upload')
runApp('Documents/tareas/maestria/papd/4to/product_development/repo/shiny/file_upload')
install.packages("readr")
shiny::runApp('Documents/tareas/maestria/papd/4to/product_development/repo/shiny/file_upload')
runApp()
runApp('Documents/tareas/maestria/papd/4to/product_development/repo/shiny/file_upload')
